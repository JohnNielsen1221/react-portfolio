{"version":3,"sources":["assets/bright-headshot-small.jpg","components/About/index.js","components/Nav/index.js","components/Cards/index.js","components/Portfolio/index.js","components/Contact/index.js","utils/helpers.js","components/Resume/index.js","components/Footer/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","About","className","id","src","headshot","style","width","alt","Nav","props","navSelected","setNavSelected","href","onClick","Cards","name","image","github","target","rel","deploy","Wrapper","children","Portfolio","projects","map","project","key","ContactForm","useState","email","message","formState","setFormState","errorMessage","setErrorMessage","successMessage","setSuccessMessage","handleChange","e","isValid","test","String","toLowerCase","validateEmail","value","console","log","length","onSubmit","preventDefault","Object","values","filter","v","emailjs","sendForm","process","then","result","text","error","htmlFor","type","defaultValue","onBlur","rows","data-testid","Resume","Footer","App","Contact","renderPage","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.b593ad5d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bright-headshot-small.cd74df75.jpg\";","import React from 'react';\nimport headshot from '../../assets/bright-headshot-small.jpg'\n\nconst About = () => {\n    return (\n        <section className='my-5'>\n            <h1 id='about'>Pleased to meet you. Hope you guessed my name...</h1>\n            <img src={headshot} className='my-2' style={{ width: '25%' }} alt='headshot' />\n            <p className='about'>\n                {`As I have progressed through my career as an adult human, I have found that while all my past positions have been connected where one leads to the other, they have all been very different. Different in their duties: Different in their fields; Different in their environments. This diverse employment history has been a blessing and a curse. On one hand, I know a lot of things about a lot of things. On the other, however, it's been hard for me to decide how I want to proceed with my professional career moving forward.\n                \n                Enter Web Development. \n                \n                While everything went bonkers in 2020, it gave me the opportunity to step back and see where I wanted to be and what I wanted to do. I love learning. I love teaching. I love collaberating. It seems that the things I love all lead to Web Development. So here I am, fresh off a BootCamp and ready to apply my continuingly growing skills.`}\n            </p>\n        </section>\n    )\n}\n\nexport default About;","import React, { useEffect } from 'react';\nimport { capitalizeFirstLetter } from '../../utils/helpers';\n\nfunction Nav(props) {\n    const { navSelected, setNavSelected } = props;\n\n    return (\n        <header className=\"flex-row px-2 \">\n            <h2>\n                <a className='my-name' href=\"#about\">\n                    John Hayes Nielsen\n        </a>\n            </h2>\n            <nav>\n                <ul className=\"flex-row\">\n                    <li className=\"mx-2\">\n                        <a href=\"#about\" onClick={() => setNavSelected(\"about\")}>About Me</a>\n                    </li>\n                    <li className=\"mx-2\">\n                        <a href=\"#portfolio\" onClick={() => setNavSelected(\"portfolio\")}>Portfolio</a>\n                    </li>\n                    <li className={`mx-2`}>\n                        <a href=\"#resume\" onClick={() => setNavSelected(\"resume\")}>Resume</a>\n                    </li>\n                    <li className={`mx-2`}>\n                        <a href=\"#contact\" onClick={() => setNavSelected(\"contact\")}>Contact</a>\n                    </li>\n\n                </ul>\n            </nav>\n        </header>\n    );\n}\n\nexport default Nav;\n","import React from 'react';\n\n//individual project card layout using props\nfunction Cards(props) {\n    return (\n        <div className=\"card\">\n            <div className=\"card-image\">\n                <img alt={props.name} src={props.image} />\n            </div>\n            <div className=\"card-content\">\n                <p>{props.name}</p>\n                <p>\n                    <a href={props.github} target=\"_blank\" rel=\"noopener noreferrer\"><img src=\"https://img.icons8.com/nolan/48/github.png\" alt=\"Repository\" id=\"project-icon\"/></a> \n                    <a href={props.deploy} target=\"_blank\" rel=\"noopener noreferrer\"><img src=\"https://img.icons8.com/nolan/48/monitor.png\" alt=\"Deployed Site\" id=\"project-icon\"/></a> \n                </p>\n            </div>\n        </div>\n    )\n}\n\nexport default Cards","import React from 'react';\nimport ProjectCard from '../Cards'\nimport projects from '../../projects.json'\n\n\nfunction Wrapper(props) {\n    return <div className=\"wrapper space-between\">{props.children}</div>;\n}\n\nfunction Portfolio() {\n\n    return (\n        <div>\n            <div>\n                <h1 className=\"text-center portfolio-title\">It's been a hard days night...</h1>\n            </div>\n\n            <Wrapper >\n                {projects.map((project) => (\n                    <ProjectCard key={project.id} name={project.name} image={project.image} github={project.github} deploy={project.deploy}/>\n                ))}\n            </Wrapper>\n        </div>\n    );\n}\n\nexport default Portfolio;","import React, { useState } from 'react';\nimport { validateEmail } from '../../utils/helpers';\nimport emailjs from 'emailjs-com';\n\n\nfunction ContactForm() {\n    const [formState, setFormState] = useState({ name: '', email: '', message: '' });\n    const { name, email, message } = formState;\n    const [errorMessage, setErrorMessage] = useState('');\n    const [successMessage, setSuccessMessage] = useState('');\n\n    function handleChange(e) {\n        if (e.target.name === 'email') {\n            const isValid = validateEmail(e.target.value);\n            console.log(isValid);\n            if (!isValid) {\n                setErrorMessage('Your email is invalid.');\n            } else {\n                setErrorMessage('');\n            }\n        } else {\n            if (!e.target.value.length) {\n                setErrorMessage(`${e.target.name} is required.`);\n            } else {\n                setErrorMessage('');\n            }\n        }\n\n        if (!errorMessage) {\n            setFormState({ ...formState, [e.target.name]: e.target.value });\n        }\n    }\n\n    const sendEmail = (e) => {\n        e.preventDefault();\n\n        if (Object.values(formState).filter(v=>v).length < 1) {\n            setErrorMessage(\"You must enter a valid response for all fields\")\n            return;\n        } else {\n            setSuccessMessage('Thank you for your email! I will be in touch shortly.')\n        }\n\n\n        console.log(formState)\n\n        emailjs.sendForm(process.env.REACT_APP_EMAIL_SERVICE_ID, process.env.REACT_APP_EMAIL_TEMPLATE_ID, e.target, process.env.REACT_APP_EMAIL_USER_ID)\n            .then((result) => {\n                console.log(result.text);\n            }, (error) => {\n                console.log(error.text);\n            });\n\n        setFormState({\n            name: '', \n            email: '', \n            message: ''\n        })\n    }\n\n    //JSX\n    return (\n        <section>\n            <h1 >Hello... Is it me you're looking for?</h1>\n            <form id='contact-form' onSubmit={sendEmail}>\n                <div>\n                    <label className='form-name' htmlFor='name'>Name:</label>\n                    <input type=\"text\" defaultValue={name} onBlur={handleChange} name=\"name\" />\n                </div>\n                <div>\n                    <label className='form-email' htmlFor='email'>Email address:</label>\n                    <input type=\"email\" defaultValue={email} onBlur={handleChange} name=\"email\" />\n                </div>\n                <div className='form-message'>\n                    <label htmlFor='message'>Message:</label>\n                    <textarea name=\"message\" defaultValue={message} onBlur={handleChange} rows=\"5\" />\n                </div>\n                {errorMessage && (\n                    <div>\n                        <p className='error-text'>{errorMessage}</p>\n                    </div>\n                )}\n                {successMessage && (\n                    <div>\n                        <p className='error-text'>{successMessage}</p>\n                    </div>\n                )}\n                <button data-testid=\"buttontag\" type='submit'>Submit</button>\n            </form>\n            <h2 className='email-contact'> You may also reach me at \n                johnhayesnielsen@gmail.com\n            </h2>\n        </section>\n    );\n}\n\nexport default ContactForm;","export function capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n  \n  export function validateEmail(email) {\n    var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  }","import React from 'react'\n\nfunction Resume() {\n    return (\n        <section>\n            <h1 className=\"resume-title\">Taking care of business and working overtime. Workout...</h1>\n            <div className=\"resume-page\">\n                <h4>Download my <a className='resume-link' href=\"https://github.com/JohnNielsen1221/react-portfolio/raw/master/src/assets/JohnHayesNielsenResume.pdf\">resume</a></h4>\n                <br></br>\n                <div className='proficiencies'>\n                    <h3>Front-End Proficiencies</h3>\n                    <p>HTML<br></br>CSS (Bootstrap, Materialize)<br></br> JavaScript<br></br> jQuery<br></br> React<br></br> IndexedDB</p>\n                </div>\n                <br></br>\n                <div>\n                    <h3>Back-End Proficiencies</h3>\n                    <p>Node<br></br> Express<br></br> SQL (sqlite, mySQL)<br></br> Sequelize<br></br> NoSQL (MongoDB, Mongoose)<br></br> API's (third-party, RESTful, server-side)</p>\n                </div>\n            </div>\n        </section>\n    )\n}\n\nexport default Resume\n","import React from 'react';\n\nconst Footer = () => {\n    return (\n        <footer>\n            <h3 className='footer-head'>Don't stop believin'...</h3>\n            <a href=\"https://github.com/JohnNielsen1221\"  target=\"_blank\" rel=\"noopener noreferrer\"><img src=\"https://img.icons8.com/nolan/64/github.png\" alt=\"Github\"/></a>\n            <a href=\"https://www.linkedin.com/in/johnhayesnielsen/\"  target=\"_blank\" rel=\"noopener noreferrer\"><img src=\"https://img.icons8.com/nolan/64/linkedin.png\" alt=\"LinkedIn\"/></a>\n            <a href=\"https://www.facebook.com/john.h.nielsen.7\"  target=\"_blank\" rel=\"noopener noreferrer\"><img src=\"https://img.icons8.com/nolan/64/facebook-new.png\" alt=\"Facebook\"/></a>\n        </footer>\n    );\n}\n\nexport default Footer;","import React, { useState } from 'react';\nimport './App.css';\nimport About from './components/About';\nimport Nav from './components/Nav';\nimport Portfolio from './components/Portfolio';\nimport ContactForm from './components/Contact';\nimport Resume from './components/Resume';\nimport Footer from './components/Footer';\n\nfunction App() {\n  const [navSelected, setNavSelected] = useState('about');\n\n  const renderPage = () => {\n\n    switch (navSelected) {\n      case 'about':\n        return <About />;\n      case 'portfolio':\n        return <Portfolio />;\n      case 'resume':\n        return <Resume />;\n      case 'contact':\n        return <ContactForm />;\n      default:\n        return <About />;\n    }\n  }\n\n  return (\n    <div>\n      <Nav\n        navSelected={navSelected}\n        setNavSelected={setNavSelected}\n      />\n      <main>\n        {renderPage()}\n      </main>\n      <Footer />\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}